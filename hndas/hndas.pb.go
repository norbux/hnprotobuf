// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: hndas.proto

package hndas

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ItemType is an enumerator for the hackernews items
type ItemType int32

const (
	ItemType_ANY     ItemType = 0
	ItemType_JOB     ItemType = 1
	ItemType_STORY   ItemType = 2
	ItemType_COMMENT ItemType = 3
	ItemType_POLL    ItemType = 4
	ItemType_POLLOPT ItemType = 5
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "ANY",
		1: "JOB",
		2: "STORY",
		3: "COMMENT",
		4: "POLL",
		5: "POLLOPT",
	}
	ItemType_value = map[string]int32{
		"ANY":     0,
		"JOB":     1,
		"STORY":   2,
		"COMMENT": 3,
		"POLL":    4,
		"POLLOPT": 5,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_hndas_proto_enumTypes[0].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_hndas_proto_enumTypes[0]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{0}
}

// LastItems filter request containing ItemType, StartFromId and Count
type ListFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        ItemType `protobuf:"varint,1,opt,name=type,proto3,enum=hndas.ItemType" json:"type,omitempty"`
	StartFromId int64    `protobuf:"varint,2,opt,name=start_from_id,json=startFromId,proto3" json:"start_from_id,omitempty"`
	Count       int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ListFilter) Reset() {
	*x = ListFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilter) ProtoMessage() {}

func (x *ListFilter) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilter.ProtoReflect.Descriptor instead.
func (*ListFilter) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{0}
}

func (x *ListFilter) GetType() ItemType {
	if x != nil {
		return x.Type
	}
	return ItemType_ANY
}

func (x *ListFilter) GetStartFromId() int64 {
	if x != nil {
		return x.StartFromId
	}
	return 0
}

func (x *ListFilter) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Filter by single Item containing the Id
type ItemFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ItemFilter) Reset() {
	*x = ItemFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemFilter) ProtoMessage() {}

func (x *ItemFilter) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemFilter.ProtoReflect.Descriptor instead.
func (*ItemFilter) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{1}
}

func (x *ItemFilter) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Filter by user containing the Id (username)
type UserFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserFilter) Reset() {
	*x = UserFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFilter) ProtoMessage() {}

func (x *UserFilter) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFilter.ProtoReflect.Descriptor instead.
func (*UserFilter) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{2}
}

func (x *UserFilter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Job item type info without comments
type Job struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy string               `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Score     int32                `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	Title     string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Text      string               `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	Url       string               `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Job) Reset() {
	*x = Job{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{3}
}

func (x *Job) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Job) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Job) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Job) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Job) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Job) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Job) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Story item type info without comments
type Story struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy     string               `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Score         int32                `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	Title         string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Text          string               `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	Url           string               `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	CommentsCount int32                `protobuf:"varint,8,opt,name=comments_count,json=commentsCount,proto3" json:"comments_count,omitempty"`
}

func (x *Story) Reset() {
	*x = Story{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Story) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Story) ProtoMessage() {}

func (x *Story) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Story.ProtoReflect.Descriptor instead.
func (*Story) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{4}
}

func (x *Story) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Story) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Story) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Story) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Story) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Story) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Story) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Story) GetCommentsCount() int32 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

// Poll item type info without comments
type Poll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy     string               `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Votes         int32                `protobuf:"varint,4,opt,name=votes,proto3" json:"votes,omitempty"`
	Title         string               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Text          string               `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	CommentsCount int32                `protobuf:"varint,7,opt,name=comments_count,json=commentsCount,proto3" json:"comments_count,omitempty"`
	Options       []*PollOpt           `protobuf:"bytes,8,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Poll) Reset() {
	*x = Poll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poll) ProtoMessage() {}

func (x *Poll) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poll.ProtoReflect.Descriptor instead.
func (*Poll) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{5}
}

func (x *Poll) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Poll) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Poll) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Poll) GetVotes() int32 {
	if x != nil {
		return x.Votes
	}
	return 0
}

func (x *Poll) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Poll) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Poll) GetCommentsCount() int32 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *Poll) GetOptions() []*PollOpt {
	if x != nil {
		return x.Options
	}
	return nil
}

// PollOpt item type info
type PollOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy string               `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Votes     int32                `protobuf:"varint,4,opt,name=votes,proto3" json:"votes,omitempty"`
	Text      string               `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *PollOpt) Reset() {
	*x = PollOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollOpt) ProtoMessage() {}

func (x *PollOpt) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollOpt.ProtoReflect.Descriptor instead.
func (*PollOpt) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{6}
}

func (x *PollOpt) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PollOpt) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PollOpt) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *PollOpt) GetVotes() int32 {
	if x != nil {
		return x.Votes
	}
	return 0
}

func (x *PollOpt) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Comment item type info with related replies
type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy string               `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Text      string               `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Replies   *Conversation        `protobuf:"bytes,5,opt,name=replies,proto3" json:"replies,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{7}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Comment) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Comment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Comment) GetReplies() *Conversation {
	if x != nil {
		return x.Replies
	}
	return nil
}

// Conversation is a list of comments
type Conversation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*Comment `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{8}
}

func (x *Conversation) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

// User info with activity (submitted item list)
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Karma     int32                `protobuf:"varint,3,opt,name=karma,proto3" json:"karma,omitempty"`
	About     string               `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	Submitted []*Item              `protobuf:"bytes,5,rep,name=submitted,proto3" json:"submitted,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{9}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetKarma() int32 {
	if x != nil {
		return x.Karma
	}
	return 0
}

func (x *User) GetAbout() string {
	if x != nil {
		return x.About
	}
	return ""
}

func (x *User) GetSubmitted() []*Item {
	if x != nil {
		return x.Submitted
	}
	return nil
}

// Item containing id and ItemType
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type ItemType `protobuf:"varint,2,opt,name=type,proto3,enum=hndas.ItemType" json:"type,omitempty"`
	// Optional objects
	User         *User         `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Job          *Job          `protobuf:"bytes,4,opt,name=job,proto3" json:"job,omitempty"`
	Story        *Story        `protobuf:"bytes,5,opt,name=story,proto3" json:"story,omitempty"`
	Poll         *Poll         `protobuf:"bytes,6,opt,name=poll,proto3" json:"poll,omitempty"`
	PollOpt      *PollOpt      `protobuf:"bytes,7,opt,name=poll_opt,json=pollOpt,proto3" json:"poll_opt,omitempty"`
	Comment      *Comment      `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment,omitempty"`
	Conversation *Conversation `protobuf:"bytes,9,opt,name=conversation,proto3" json:"conversation,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{10}
}

func (x *Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetType() ItemType {
	if x != nil {
		return x.Type
	}
	return ItemType_ANY
}

func (x *Item) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Item) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Item) GetStory() *Story {
	if x != nil {
		return x.Story
	}
	return nil
}

func (x *Item) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *Item) GetPollOpt() *PollOpt {
	if x != nil {
		return x.PollOpt
	}
	return nil
}

func (x *Item) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *Item) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type ItemsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ItemsList) Reset() {
	*x = ItemsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hndas_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemsList) ProtoMessage() {}

func (x *ItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_hndas_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemsList.ProtoReflect.Descriptor instead.
func (*ItemsList) Descriptor() ([]byte, []int) {
	return file_hndas_proto_rawDescGZIP(), []int{11}
}

func (x *ItemsList) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_hndas_proto protoreflect.FileDescriptor

var file_hndas_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x68,
	0x6e, 0x64, 0x61, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1c, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc1,
	0x01, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0xea, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x81, 0x02, 0x0a, 0x04, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x6e, 0x64,
	0x61, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x50, 0x6f, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6b, 0x61, 0x72, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x61, 0x72,
	0x6d, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6e,
	0x64, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x22, 0xcd, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x6e, 0x64,
	0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x12, 0x22, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52,
	0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x6c, 0x5f, 0x6f, 0x70,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e,
	0x50, 0x6f, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x52, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x4f, 0x70, 0x74,
	0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x2a, 0x4b, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x4f, 0x42, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x4c,
	0x4c, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x4c, 0x4c, 0x4f, 0x50, 0x54, 0x10, 0x05,
	0x32, 0xa8, 0x03, 0x0a, 0x03, 0x44, 0x41, 0x53, 0x12, 0x32, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x11, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x10, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x68, 0x6e,
	0x64, 0x61, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x11, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x1a, 0x13, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x06, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x12, 0x11, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0a, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x4a,
	0x6f, 0x62, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x13, 0x2e, 0x68, 0x6e, 0x64, 0x61,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00,
	0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x11, 0x2e, 0x68, 0x6e,
	0x64, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0b,
	0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x11, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0x13, 0x2e, 0x68, 0x6e, 0x64, 0x61, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x68, 0x6e, 0x64, 0x61,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0b, 0x2e, 0x68,
	0x6e, 0x64, 0x61, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x72, 0x74, 0x68, 0x2d, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2f, 0x68, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x68, 0x6e, 0x64, 0x61, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hndas_proto_rawDescOnce sync.Once
	file_hndas_proto_rawDescData = file_hndas_proto_rawDesc
)

func file_hndas_proto_rawDescGZIP() []byte {
	file_hndas_proto_rawDescOnce.Do(func() {
		file_hndas_proto_rawDescData = protoimpl.X.CompressGZIP(file_hndas_proto_rawDescData)
	})
	return file_hndas_proto_rawDescData
}

var file_hndas_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hndas_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_hndas_proto_goTypes = []interface{}{
	(ItemType)(0),               // 0: hndas.ItemType
	(*ListFilter)(nil),          // 1: hndas.ListFilter
	(*ItemFilter)(nil),          // 2: hndas.ItemFilter
	(*UserFilter)(nil),          // 3: hndas.UserFilter
	(*Job)(nil),                 // 4: hndas.Job
	(*Story)(nil),               // 5: hndas.Story
	(*Poll)(nil),                // 6: hndas.Poll
	(*PollOpt)(nil),             // 7: hndas.PollOpt
	(*Comment)(nil),             // 8: hndas.Comment
	(*Conversation)(nil),        // 9: hndas.Conversation
	(*User)(nil),                // 10: hndas.User
	(*Item)(nil),                // 11: hndas.Item
	(*ItemsList)(nil),           // 12: hndas.ItemsList
	(*timestamp.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_hndas_proto_depIdxs = []int32{
	0,  // 0: hndas.ListFilter.type:type_name -> hndas.ItemType
	13, // 1: hndas.Job.created_at:type_name -> google.protobuf.Timestamp
	13, // 2: hndas.Story.created_at:type_name -> google.protobuf.Timestamp
	13, // 3: hndas.Poll.created_at:type_name -> google.protobuf.Timestamp
	7,  // 4: hndas.Poll.options:type_name -> hndas.PollOpt
	13, // 5: hndas.PollOpt.created_at:type_name -> google.protobuf.Timestamp
	13, // 6: hndas.Comment.created_at:type_name -> google.protobuf.Timestamp
	9,  // 7: hndas.Comment.replies:type_name -> hndas.Conversation
	8,  // 8: hndas.Conversation.comments:type_name -> hndas.Comment
	13, // 9: hndas.User.created_at:type_name -> google.protobuf.Timestamp
	11, // 10: hndas.User.submitted:type_name -> hndas.Item
	0,  // 11: hndas.Item.type:type_name -> hndas.ItemType
	10, // 12: hndas.Item.user:type_name -> hndas.User
	4,  // 13: hndas.Item.job:type_name -> hndas.Job
	5,  // 14: hndas.Item.story:type_name -> hndas.Story
	6,  // 15: hndas.Item.poll:type_name -> hndas.Poll
	7,  // 16: hndas.Item.poll_opt:type_name -> hndas.PollOpt
	8,  // 17: hndas.Item.comment:type_name -> hndas.Comment
	9,  // 18: hndas.Item.conversation:type_name -> hndas.Conversation
	11, // 19: hndas.ItemsList.items:type_name -> hndas.Item
	1,  // 20: hndas.DAS.LastItems:input_type -> hndas.ListFilter
	2,  // 21: hndas.DAS.GetStory:input_type -> hndas.ItemFilter
	2,  // 22: hndas.DAS.GetStoryComments:input_type -> hndas.ItemFilter
	2,  // 23: hndas.DAS.GetJob:input_type -> hndas.ItemFilter
	2,  // 24: hndas.DAS.GetJobComments:input_type -> hndas.ItemFilter
	2,  // 25: hndas.DAS.GetPoll:input_type -> hndas.ItemFilter
	2,  // 26: hndas.DAS.GetPollComments:input_type -> hndas.ItemFilter
	3,  // 27: hndas.DAS.GetUserInfo:input_type -> hndas.UserFilter
	12, // 28: hndas.DAS.LastItems:output_type -> hndas.ItemsList
	5,  // 29: hndas.DAS.GetStory:output_type -> hndas.Story
	9,  // 30: hndas.DAS.GetStoryComments:output_type -> hndas.Conversation
	4,  // 31: hndas.DAS.GetJob:output_type -> hndas.Job
	9,  // 32: hndas.DAS.GetJobComments:output_type -> hndas.Conversation
	6,  // 33: hndas.DAS.GetPoll:output_type -> hndas.Poll
	9,  // 34: hndas.DAS.GetPollComments:output_type -> hndas.Conversation
	10, // 35: hndas.DAS.GetUserInfo:output_type -> hndas.User
	28, // [28:36] is the sub-list for method output_type
	20, // [20:28] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_hndas_proto_init() }
func file_hndas_proto_init() {
	if File_hndas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hndas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Job); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Story); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Poll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conversation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hndas_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hndas_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hndas_proto_goTypes,
		DependencyIndexes: file_hndas_proto_depIdxs,
		EnumInfos:         file_hndas_proto_enumTypes,
		MessageInfos:      file_hndas_proto_msgTypes,
	}.Build()
	File_hndas_proto = out.File
	file_hndas_proto_rawDesc = nil
	file_hndas_proto_goTypes = nil
	file_hndas_proto_depIdxs = nil
}
